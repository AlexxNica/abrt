#!/usr/bin/expect -f

set env(EDITOR) "./fakeditor.sh"
set crashdir [lindex $argv 0]
spawn abrt-cli report $crashdir

set timeout 60

# timeout handler
proc itstime {args} {
  puts "!! Timeout !!"
  exit 1
}

while {1} {
  expect {
    eof {break}
    timeout { itstime }
    # analyzers
    -re "\n (\[0-9\]).*?GNU Debugger" {
      puts "Got GNU Debbuger"
      set debugger_opt $expect_out(1,string)
      puts ">> $debugger_opt"
    }
    -re "\n (\[0-9\]).*?Retrace Server" {
      puts "Got Retrace Server"
      set retrace_opt $expect_out(1,string)
      puts ">> $retrace_opt"
    }
    "Select analyzer:" {
      send "$debugger_opt\r"
    }
    # debuginfo installation
    "Downloading" {
      send "N\r"
    }
    # reporters
    -re "\n (\[0-9\]).*?Bugzilla" {
      puts "Got Bugzilla"
      set bugzilla_opt $expect_out(1,string)
      puts ">> $bugzilla_opt"
    }
    -re "\n (\[0-9\]).*?Mailx" {
      puts "Got Mailx"
      set mailx_opt $expect_out(1,string)
      puts ">> $mailx_opt"
    }
    -re "\n (\[0-9\]).*?Logger" {
      puts "Got Logger"
      set logger_opt $expect_out(1,string)
      puts ">> $logger_opt"
    }
    -re "\n (\[0-9\]).*?Customer" {
      puts "Got RHCS"
      set rhcs_opt $expect_out(1,string)
      puts ">> $rhcs_opt"
    }
    "Select reporter" {
      send "$logger_opt\r"
    }
    "Log File" {
      puts "Setting log file to /tmp/abrt.log"
      send "/tmp/abrt.log\r"
      break
    }
  }
}
wait
