# This table specifies which programs should be run
# when the specified event occurs in crash dump lifetime.
#
# Example:
# EVENT=post-create   { pwd; date; }>/tmp/dt; echo $HOSTNAME `uname -r`
#
# Each line may have conditions to be checked
# before the program is run.
#
# Conditions have form VAR=VAL, where VAR is either word "EVENT"
# or a name of crash dump element to be checked (for example,
# "executable", "package", hostname" etc).
#
# If all conditions match, the program is run in the shell.
# All shell language constructs are valid.
# All stdout and stderr output is captured and passed to abrt
# and possibly to abrt's frontends and shown to the user.
#
# If the program terminates with nonzero exitcode,
# the event processing is considered unsuccessful and is stopped.
# Last captured output line, if any, is considered to be
# the error message indicating the reason of the failure,
# and may be used by abrt as such.
#
# If the program terminates successfully, next line is read
# and processed. This process is repeated until the end of this file.

# abrt-action-analyze-c needs package name, save package data first
EVENT=post-create                  abrt-action-save-package-data
EVENT=post-create analyzer=CCpp    abrt-action-analyze-c
EVENT=post-create analyzer=python  abrt-action-analyze-python
EVENT=post-create analyzer=oops    abrt-action-analyze-oops

EVENT=analyze analyzer=CCpp    abrt-action-install-debuginfo ./coredump /var/run/abrt/$$-$RANDOM /var/cache/abrt-di
EVENT=analyze analyzer=CCpp    abrt-action-generate-backtrace

EVENT=report  analyzer=oops    abrt-action-kerneloops
EVENT=report  analyzer=CCpp    abrt-action-bugzilla
EVENT=report  analyzer=CCpp    abrt-action-print >/var/log/abrt.log
EVENT=report  analyzer=python  abrt-action-bugzilla
EVENT=report  analyzer=python  abrt-action-print >/var/log/abrt.log
